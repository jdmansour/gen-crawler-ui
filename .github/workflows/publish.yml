name: Publish Docker image

on:
  push:
    branches: ['main', 'testing']
  # release:
  #   types: [published]

env:
  EDU_SHARING_USERNAME: ""
  EDU_SHARING_PASSWORD: 'asfgRefj32dÃ¤x7z#safz231f!wetgf'
  EDU_SHARING_BASE_URL: "https://repository.staging.openeduhub.net/edu-sharing/"
  Z_API_KEY: ""
  GENERIC_CRAWLER_LLM_API_KEY: ""
  GENERIC_CRAWLER_USE_LLM_API: "True"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: rlespinasse/github-slug-action@v2.x
      - name: "Set environmental variables"
        run: |
          echo "DC_IMAGE_VERSION=$GITHUB_REF_SLUG" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: my-docker-hub-namespace/my-docker-hub-repository

      - name: Docker Compose Build & Push
        uses: 0x4r45h/docker-compose-ci@v0.1.1
        with:
          services: "metadataapi"
          # services: "web metadataapi scrapyd"

      # - name: Build and push Docker image
      #   id: push
      #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: index.docker.io/my-docker-hub-namespace/my-docker-hub-repository
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
